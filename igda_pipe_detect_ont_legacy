#!/bin/bash
exclude_loci_file=""
min_condprob=0.7
min_prob=0.4
topn_cmpreads=100
nthread=1
dforest_r=25
while getopts ":hc:p:x:q:r:n:" opt; do
        case ${opt} in
                h )
                        echo "igda_pipe_detect_ont -n nthread -r minimal_nreads_in_rsm -c min_condprob -p min_prob -q topn_cmpreads -x exclude_loci_file infile(bam or sam file) reffile contextfile outdir"
                        echo "default:"
                        echo -e "\t-x (empty)"
			echo -e "\t-c 0.7"
			echo -e "\t-p 0.4"
			echo -e "\t-q 100"
			echo -e "\t-r 25"
			echo -e "\t-n 1"
			exit 0;;
		c )
			min_condprob=$OPTARG;;
		p )
			min_prob=$OPTARG;;
                x )
                        exclude_loci_file=$OPTARG;;
		q )
			topn_cmpreads=$OPTARG;;
		r )
			dforest_r=$OPTARG;;
		n )
			nthread=$OPTARG;;
                \? )
                        echo "Invalid option: $OPTARG" 1>&2;;
                : )
                        echo "Invalid option: $OPTARG requires an argument" 1>&2;;
        esac
done
shift $((OPTIND - 1))

if [ $# -ne 4 ] ; then
	echo "igda_pipe_detect_ont -n nthread -r minimal_nreads_in_rsm -c min_condprob -p min_prob -q topn_cmpreads -x exclude_loci_file infile(bam or sam file) reffile contextfile outdir"
        echo "default:"
        echo -e "\t-x (empty)"
        echo -e "\t-c 0.7"
        echo -e "\t-p 0.4"
	echo -e "\t-q 100"
	echo -e "\t-r 25"
	echo -e "\t-n 1"
	exit 0
fi


infile=$1
reffile=$2
contextfile=$3
outdir=$4

echo "infile = "$infile
echo "reffile = "$reffile
echo "contextfile = "$contextfile
echo "outdir = "$outdir
echo "exclude_loci_file = "$exclude_loci_file
echo "min_condprob = "$min_condprob
echo "min_prob = "$min_prob
echo "topn_cmpreads = "$topn_cmpreads
echo "dforest_r = "$dforest_r
echo "nthread = "$nthread

echo "Start."
mkdir -p $outdir

echo "============= samtom5 ==========="
igda samtom5 $infile $reffile $outdir/realign.m5

echo "============= pileup ==========="
igda contexteffect $outdir/realign.m5 $outdir/realign

echo "============= encode ==========="
igda encode -t $outdir/realign.m5 $outdir/realign.encode

echo "============= cmpreads ==========="
igda cmpreads -n $nthread -l 0.5 -p $topn_cmpreads $outdir/realign.encode $outdir/realign.m5 $outdir/realign.cmpreads

echo "============= rsm ==========="
echo "dforest_r=$dforest_r"
igda dforest -n $nthread -d 10000 -r $dforest_r $outdir/realign.encode $outdir/realign.m5 $outdir/realign.cmpreads $reffile $outdir/realign.dforest $outdir/tmp
igda filter -f $min_condprob $outdir/realign.dforest $outdir/realign.dforest.ft

echo "============= detect orphan variants ==========="
igda detectsingle -c 1000 -f 0 -b 0 $outdir/realign.pileup $contextfile $outdir/realign.detectsingle.raw
igda detectsingle -c 1000 -f $min_prob -b 50 $outdir/realign.pileup $contextfile $outdir/realign.detectsingle

echo "============= combine rsm and orphan variants ==========="
cat $outdir/realign.dforest.ft $outdir/realign.detectsingle | sort -s -u -k1,1n > $outdir/realign_raw.detected

if test "$exclude_loci_file" == "" ; then
	cp $outdir/realign_raw.detected $outdir/realign.detected
else
	exclude_loci_by_code $exclude_loci_file $outdir/realign_raw.detected $outdir/realign.detected
fi 

igda getvar -c 0 $outdir/realign.detected $outdir/realign.var

echo "Done."


